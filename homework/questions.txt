Here are homework questions for you to recap the concepts
we went through in class.

1. Navigating the terminal
  a, What is a root directory?
  Ans. The root directory is the top-level directory in a folder structure. All of the other folders grow outwards from the root directory, so it makes sense to think of the root directory as the trunk of a tree from which the branches grow.
  
  b, What is the difference between root and home directory?
  Ans.The root directory is the topmost level of the system drive. The home directory is a subdirectory of the root directory. It is denoted by a slash '/'. It is denoted by '~' and has path "/users/username".
  
  c, What is the difference between absolute and relative path?
  ans. Absolute path: is a complete path from start of actual file system from / directory.
  Relative path:is defined as the path related to the present working directly(pwd).
  
  d, What command do you use to see what directory are you currently in?
  ans.Always find the directory you are in using the "pwd"command.
  
  e, How would you see the files and folders in a directory?
  ans. we can used to see the files and folder in a directory "ls" command.
  
  f, How do you go back to your home directory?
  ans. used to back to home directory "cd" ..

  g, How do you create a new folder, can you also specify in the command where you want to save it ?
  Ans. Type "mkdir"(folder name) you wish to create, then press “Enter“.
  
  h, How do you remove a folder/directory, is it the same as removing a file?
  Ans. use the rm command with the recursive option, -r .

  i, What is a file or folder is not empty ? What flag would you use to remove it anyway?
  Ans.-f flag.
  
  j, How do you move a folder/file ? What arguments does the command take?
 Ans. move a folder/ file "mv" ¬f "mv" -r

  k, How can you find out more about a command and see the available options, syntax etc.
    (How/Where do you see the manual/help for a command)
    ans. 

  l, With what command do you rename a folder/file in the command line?
ans. Rename a folder/file we should use command "mv" f /c/user/ desktop name/ folder/file name.

  m, How do you copy a folder ?
  ans. "cp" file name

  n, What command do you use to open a folder/file ?
  ans. Type "cmd"
 
  2. Creating a new project
  a, How do you create a new folder (what command) ?
  ans. Mkdir folder name.

  b, What command do you use to create/initiate a local repository (from the command line)?
     /One can also create a new repository on Github and then just clone it to their machine./
  ans. Git init
  c, What command do you use to create a new file ?

  d, If you create a file and and add text to it, these changes are now on your working directory.
     How would you save these to the local repository (describe the steps with commands)

    - from working directory to the staging area

    - from the staging area to local repository

  e, What does git status do ?

  f, How would you check your commit history?

  g, To share your project(folder), you will need to create a remote repository.
     This can be done either on Github or in the command line using "gh repo create" command.
     To connect your local repository to the remote one (if you were to create it on github)
     you need to add remote to it. Briefly describe, what would be the commands to do this ?

    - How do you check whether you already have some github/remote repository connected to your local one?

    - What command do you use to add the remote

  h, When local and remote repository are connected, one can push the changes/files so they are visible
     on github. What would be the structrure of the command ? Do you need to create a pull request?


3. Working on an existing project
  a, To get this homework to your computer you needed to copy a remote repository into your machine.
    What were the commands you needed to use?

  b, Do you need to initiate a git repository after cloning a project?

  c, What is the difference between forking and cloning?

  d, Can you just push your changes to repository that you don't "own" on github?
